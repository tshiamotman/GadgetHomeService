CREATE TABLE "user" (
    user_name VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email_address VARCHAR(255) NOT NULL,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    phone_number VARCHAR(255),
    role VARCHAR(255) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (user_name)
);

CREATE TABLE "device_token" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    token VARCHAR(255) NOT NULL,
    create_date TIMESTAMP NOT NULL,
    user_id VARCHAR(255) NOT NULL,
    CONSTRAINT pk_device_token PRIMARY KEY (id),
    CONSTRAINT unique_token UNIQUE (token),
    CONSTRAINT user_fk FOREIGN KEY (user_id) REFERENCES user (user_name)
);

CREATE TABLE "post" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    brand VARCHAR(255) NOT NULL,
    model VARCHAR(255) NOT NULL,
    device VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    price INT NOT NULL,
    owner_id VARCHAR(255) NOT NULL,
    create_date TIMESTAMP NOT NULL,
    is_available boolean,
    CONSTRAINT pk_post PRIMARY KEY (id),
    CONSTRAINT owner_fk FOREIGN KEY (owner_id) REFERENCES user (user_name)
);

CREATE TABLE "picture" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    image bytea NOT NULL,
    user_id VARCHAR(255),
    post_id BIGINT,
    CONSTRAINT pk_picture PRIMARY KEY (id),
    CONSTRAINT user_fk FOREIGN KEY (user_id) REFERENCES user (user_name),
    CONSTRAINT post_fk FOREIGN KEY (post_id) REFERENCES post (id)
);

CREATE TABLE "chat" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    message VARCHAR(255) NOT NULL,
    message_id VARCHAR(255),
    sender_id VARCHAR(255) NOT NULL,
    recipient_id VARCHAR(255) NOT NULL,
    create_date TIMESTAMP NOT NULL,
    delivered_date TIMESTAMP,
    read_date TIMESTAMP,
    post_id BIGINT,
    CONSTRAINT pk_chat PRIMARY KEY (id),
    CONSTRAINT unique_message_id UNIQUE (message_id),
    CONSTRAINT sender_fk FOREIGN KEY (sender_id) REFERENCES user (user_name),
    CONSTRAINT recipient_fk FOREIGN KEY (recipient_id) REFERENCES user (user_name),
    CONSTRAINT post_fk FOREIGN KEY (post_id) REFERENCES post (id)
);